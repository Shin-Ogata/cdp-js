#splash-screen {
  display: table;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: black;
  z-index: 99999999;
  visibility: visible;
}

#splash-contents {
  display: table-cell;
  width: 100%;
  height: 100%;
  vertical-align: middle;
  text-align: center;
}

#waiting-img {
  list-style-type: none;
}

#waiting-img > li {
  display: inline-block;
  background-color: transparent;
  width: 12px;
  height: 12px;
  border-radius: 12px;
  margin: 6px;
  animation: waiting-animation 1s linear 0s infinite normal;
}

#waiting-img > li:nth-child(1) {
  animation-delay: 0.1s;
}

#waiting-img > li:nth-child(2) {
  animation-delay: 0.2s;
}

#waiting-img > li:nth-child(3) {
  animation-delay: 0.3s;
}

#waiting-img > li:nth-child(4) {
  animation-delay: 0.4s;
}

#waiting-img > li:nth-child(5) {
  animation-delay: 0.5s;
}

#waiting-img > li:nth-child(6) {
  animation-delay: 0.6s;
}

#waiting-msg {
  text-align: center;
  color: white;
}

@keyframes waiting-animation {
  0% {
    background-color: transparent;
  }
  20% {
    background-color: Lime;
  }
  40% {
    background-color: transparent;
  }
}
/*# sourceMappingURL=data:application/json;base64, */