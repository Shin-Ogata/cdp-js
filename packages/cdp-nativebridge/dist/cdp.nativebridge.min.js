/*!
 * cdp.nativebridge.js 2.1.1
 *
 * Date: 2018-01-25T06:33:33.647Z
 */
(function(root,factory){if(typeof define==="function"&&define.amd){define(["cdp.core","cdp.promise"],function(){return factory(root.CDP||(root.CDP={}),root.jQuery||root.$)})}else{factory(root.CDP||(root.CDP={}),root.jQuery||root.$)}})((this||0).self||global,function(CDP,$){CDP.NativeBridge=CDP.NativeBridge||{};var CDP;(function(CDP){var RESULT_CODE_BASE;(function(RESULT_CODE_BASE){RESULT_CODE_BASE[RESULT_CODE_BASE["CDP_NATIVEBRIDGE_DECLARERATION"]=0]="CDP_NATIVEBRIDGE_DECLARERATION";RESULT_CODE_BASE[RESULT_CODE_BASE["CDP_NATIVEBRIDGE"]=2*CDP._MODULE_RESULT_CODE_RANGE_CDP]="CDP_NATIVEBRIDGE"})(RESULT_CODE_BASE=CDP.RESULT_CODE_BASE||(CDP.RESULT_CODE_BASE={}));var FUNCTION_CODE_RANGE=10;var LOCAL_CODE_BASE;(function(LOCAL_CODE_BASE){LOCAL_CODE_BASE[LOCAL_CODE_BASE["GATE"]=0]="GATE";LOCAL_CODE_BASE[LOCAL_CODE_BASE["UTILS"]=1*FUNCTION_CODE_RANGE]="UTILS"})(LOCAL_CODE_BASE||(LOCAL_CODE_BASE={}));var RESULT_CODE;(function(RESULT_CODE){RESULT_CODE[RESULT_CODE["ERROR_CDP_NATIVEBRIDG_DECLARATION"]=0]="ERROR_CDP_NATIVEBRIDG_DECLARATION";RESULT_CODE[RESULT_CODE["ERROR_CDP_NATIVEBRIDGE_INVALID_ARG"]=CDP.DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP_NATIVEBRIDGE,LOCAL_CODE_BASE.GATE+1,"called with invalid args.")]="ERROR_CDP_NATIVEBRIDGE_INVALID_ARG";RESULT_CODE[RESULT_CODE["ERROR_CDP_NATIVEBRIDGE_NOT_IMPLEMENT"]=CDP.DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP_NATIVEBRIDGE,LOCAL_CODE_BASE.GATE+2,"method not implemented.")]="ERROR_CDP_NATIVEBRIDGE_NOT_IMPLEMENT";RESULT_CODE[RESULT_CODE["ERROR_CDP_NATIVEBRIDGE_NOT_SUPPORT"]=CDP.DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP_NATIVEBRIDGE,LOCAL_CODE_BASE.GATE+3,"method not supported.")]="ERROR_CDP_NATIVEBRIDGE_NOT_SUPPORT";RESULT_CODE[RESULT_CODE["ERROR_CDP_NATIVEBRIDGE_INVALID_OPERATION"]=CDP.DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP_NATIVEBRIDGE,LOCAL_CODE_BASE.GATE+4,"invalid operation.")]="ERROR_CDP_NATIVEBRIDGE_INVALID_OPERATION";RESULT_CODE[RESULT_CODE["ERROR_CDP_NATIVEBRIDGE_CLASS_NOT_FOUND"]=CDP.DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP_NATIVEBRIDGE,LOCAL_CODE_BASE.GATE+5,"class not found.")]="ERROR_CDP_NATIVEBRIDGE_CLASS_NOT_FOUND";RESULT_CODE[RESULT_CODE["ERROR_CDP_NATIVEBRIDGE_METHOD_NOT_FOUND"]=CDP.DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP_NATIVEBRIDGE,LOCAL_CODE_BASE.GATE+6,"method not found.")]="ERROR_CDP_NATIVEBRIDGE_METHOD_NOT_FOUND";RESULT_CODE[RESULT_CODE["ERROR_CDP_NATIVEBRIDGE_CORDOVA_REQUIRED"]=CDP.DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP_NATIVEBRIDGE,LOCAL_CODE_BASE.UTILS+1,"cordova required.")]="ERROR_CDP_NATIVEBRIDGE_CORDOVA_REQUIRED";RESULT_CODE[RESULT_CODE["ERROR_CDP_NATIVEBRIDGE_CORDOVA_PLUGIN_REQUIRED"]=CDP.DECLARE_ERROR_CODE(RESULT_CODE_BASE.CDP_NATIVEBRIDGE,LOCAL_CODE_BASE.UTILS+2,"'cordova-plugin-cdp-nativebridge' cordova plugin required.")]="ERROR_CDP_NATIVEBRIDGE_CORDOVA_PLUGIN_REQUIRED"})(RESULT_CODE=CDP.RESULT_CODE||(CDP.RESULT_CODE={}))})(CDP||(CDP={}));var CDP;(function(CDP){var NativeBridge;(function(NativeBridge){var TAG="[CDP.NativeBridge.Utils] ";var Utils=function(){function Utils(){}Utils.defineResultCode=function(errorCode){Object.defineProperty(NativeBridge,errorCode,{get:function(){if(Utils.s_pluginReady){return CDP.Plugin.NativeBridge[errorCode]}else{return null}},enumerable:true,configurable:true})};Utils.waitForPluginReady=function(){var df=$.Deferred();if(Utils.s_pluginReady){return $.Deferred().resolve()}try{var channel=cordova.require("cordova/channel");channel.onCordovaReady.subscribe(function(){if(null!=CDP.Plugin.NativeBridge){Utils.s_pluginReady=true;df.resolve()}else{df.reject(CDP.makeErrorInfo(CDP.RESULT_CODE.ERROR_CDP_NATIVEBRIDGE_CORDOVA_PLUGIN_REQUIRED,TAG))}})}catch(error){df.reject(CDP.makeErrorInfo(CDP.RESULT_CODE.ERROR_CDP_NATIVEBRIDGE_CORDOVA_REQUIRED,TAG))}return df.promise()};Utils.makePromise=function(df,useRawPluginResult){return CDP.makePromise(df,{_bridge:null,_taskId:null,abort:function(info){var _this=this;var code=useRawPluginResult?NativeBridge.ERROR_CANCEL:CDP.RESULT_CODE.SUCCEEDED;var detail=$.extend({code:code},{message:"abort",name:TAG+"method canceled",taskId:this._taskId},info);var cancel=function(){if(null!=_this._bridge&&null!=_this._taskId){_this._bridge.cancel(_this._taskId,detail)}df.reject(detail)};if(null!=this.dependency){if(this.dependency.abort){this.dependency.abort(detail)}else{console.error(TAG+"[call] dependency object doesn't have 'abort()' method.")}if(this.callReject&&"pending"===this.state()){cancel()}}else if("pending"===this.state()){cancel()}}})};Utils.extend=function(protoProps,staticProps){var parent=this;var child;if(protoProps&&protoProps.hasOwnProperty("constructor")){child=protoProps.constructor}else{child=function(){return parent.apply(this,arguments)}}$.extend(child,parent,staticProps);var Surrogate=function(){this.constructor=child};Surrogate.prototype=parent.prototype;child.prototype=new Surrogate;if(protoProps){$.extend(child.prototype,protoProps)}child.__super__=parent.prototype;return child};Utils.s_pluginReady=false;return Utils}();NativeBridge.Utils=Utils})(NativeBridge=CDP.NativeBridge||(CDP.NativeBridge={}))})(CDP||(CDP={}));var CDP;(function(CDP){var NativeBridge;(function(NativeBridge){var TAG="[CDP.NativeBridge.Gate] ";NativeBridge.Utils.defineResultCode("SUCCESS_OK");NativeBridge.Utils.defineResultCode("SUCCESS_PROGRESS");NativeBridge.Utils.defineResultCode("ERROR_FAIL");NativeBridge.Utils.defineResultCode("ERROR_CANCEL");NativeBridge.Utils.defineResultCode("ERROR_INVALID_ARG");NativeBridge.Utils.defineResultCode("ERROR_NOT_IMPLEMENT");NativeBridge.Utils.defineResultCode("ERROR_NOT_SUPPORT");NativeBridge.Utils.defineResultCode("ERROR_INVALID_OPERATION");NativeBridge.Utils.defineResultCode("ERROR_CLASS_NOT_FOUND");NativeBridge.Utils.defineResultCode("ERROR_METHOD_NOT_FOUND");function convertErrorInfo(result){var resultCode;switch(result.code){case NativeBridge.ERROR_CANCEL:break;case NativeBridge.ERROR_INVALID_ARG:resultCode=CDP.RESULT_CODE.ERROR_CDP_NATIVEBRIDGE_INVALID_ARG;break;case NativeBridge.ERROR_NOT_IMPLEMENT:resultCode=CDP.RESULT_CODE.ERROR_CDP_NATIVEBRIDGE_NOT_IMPLEMENT;break;case NativeBridge.ERROR_NOT_SUPPORT:resultCode=CDP.RESULT_CODE.ERROR_CDP_NATIVEBRIDGE_NOT_SUPPORT;break;case NativeBridge.ERROR_INVALID_OPERATION:resultCode=CDP.RESULT_CODE.ERROR_CDP_NATIVEBRIDGE_INVALID_OPERATION;break;case NativeBridge.ERROR_CLASS_NOT_FOUND:resultCode=CDP.RESULT_CODE.ERROR_CDP_NATIVEBRIDGE_CLASS_NOT_FOUND;break;case NativeBridge.ERROR_METHOD_NOT_FOUND:resultCode=CDP.RESULT_CODE.ERROR_CDP_NATIVEBRIDGE_METHOD_NOT_FOUND;break;case NativeBridge.ERROR_FAIL:default:resultCode=CDP.RESULT_CODE.FAILED;break}if(NativeBridge.ERROR_CANCEL===result.code){return CDP.makeCanceledErrorInfo(TAG,result)}else{return CDP.makeErrorInfo(resultCode,TAG,null,result)}}var Gate=function(){function Gate(feature,options){var _this=this;this._options=$.extend({useRawPluginResult:false},options);NativeBridge.Utils.waitForPluginReady().done(function(){_this._bridge=new CDP.Plugin.NativeBridge(feature,options)}).catch(function(reason){throw Error(reason)})}Gate.prototype.exec=function(method,args,options){var _this=this;var df=$.Deferred();var opt=$.extend({},this._options,options);var promise=NativeBridge.Utils.makePromise(df,opt.useRawPluginResult);NativeBridge.Utils.waitForPluginReady().done(function(){var taskId=_this._bridge.exec(function(result){if(NativeBridge.SUCCESS_PROGRESS===result.code){if(!opt.useRawPluginResult&&null!=result.params){df.notify.apply(df,result.params.concat([result]))}else{df.notify(result)}}else{if(!opt.useRawPluginResult&&null!=result.params){df.resolve.apply(df,result.params.concat([result]))}else{df.resolve(result)}}},function(error){if(opt.useRawPluginResult){df.reject(error)}else{df.reject(convertErrorInfo(error))}},method,args,options);promise._bridge=_this._bridge;promise._taskId=taskId}).catch(function(reason){df.reject(reason)});return promise};Gate.prototype.cancel=function(options){var _this=this;var df=$.Deferred();var opt=$.extend({},this._options,options);NativeBridge.Utils.waitForPluginReady().done(function(){_this._bridge.cancel(null,opt,function(result){df.resolve(result)},function(error){if(opt.useRawPluginResult){df.reject(error)}else{df.reject(convertErrorInfo(error))}})}).catch(function(reason){df.reject(reason)});return df.promise()};Gate.prototype.dispose=function(options){var _this=this;var df=$.Deferred();var opt=$.extend({},this._options,options);NativeBridge.Utils.waitForPluginReady().done(function(){_this._bridge.dispose(opt,function(result){df.resolve(result)},function(error){if(opt.useRawPluginResult){df.reject(error)}else{df.reject(convertErrorInfo(error))}})}).catch(function(reason){df.reject(reason)});return df.promise()};Object.defineProperty(Gate.prototype,"bridge",{get:function(){return this._bridge},enumerable:true,configurable:true});Gate.extend=NativeBridge.Utils.extend;return Gate}();NativeBridge.Gate=Gate})(NativeBridge=CDP.NativeBridge||(CDP.NativeBridge={}))})(CDP||(CDP={}));return CDP.NativeBridge});
//# sourceMappingURL=cdp.nativebridge.min.js.map