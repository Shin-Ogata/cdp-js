{"version":3,"sources":["dist/cdp.lazyload.js"],"names":["root","factory","define","amd","$","Config","CDP","jQuery","this","TAG","_getExtension","file","ret","fileTypes","split","len","length","_getScriptElements","$typeLazy","scripts","src","attr","data","toLowerCase","requirejs","toUrl","ajax","url","method","async","dataType","success","error","status","console","find","_appendSync","$script","_src","_url","$elem","toLocation","autoDomainAssign","code","match","globalEval","document","head","appendChild","removeAttr","_lazyLoad","type","each","remove","_isAMD","lazyLoad","isAMD"],"mappings":";;;;;CAKC,SAAWA,KAAMC,SACd,UAAWC,SAAW,YAAcA,OAAOC,IAAK,CAE5CD,QAAQ,UAAW,SAAUE,GACzB,OAAOH,QAAQG,EAAGJ,KAAKK,WAAcL,KAAKM,MAAQN,KAAKM,eAExD,CAEHL,QAAQD,KAAKO,QAAUP,KAAKI,EAAGJ,KAAKK,WAAcL,KAAKM,MAAQN,KAAKM,WAR5E,CAUGE,KAAM,SAAUJ,EAAGC,OAAQC,KAE1B,IAAIG,IAAM,SAiBV,SAASC,cAAcC,MACnB,IAAIC,IACJ,GAAID,KAAM,CACN,IAAIE,UAAYF,KAAKG,MAAM,KAC3B,IAAIC,IAAMF,UAAUG,OACpB,GAAI,IAAMD,IAAK,CACX,OAAOH,IAEXA,IAAMC,UAAUE,IAAM,GACtB,OAAOH,KAmBf,SAASK,mBAAmBC,WACxB,IAAIC,QACJ,IAAIC,IAAMF,UAAUG,KAAK,OACzB,IAAKD,IAAK,CACNA,IAAMF,UAAUI,KAAK,OAEzB,GAAI,OAASZ,cAAcU,KAAKG,cAAe,CAC3C,OAAOL,cACJ,CACH,GAAIM,kBAAoBA,UAAUC,QAAU,WAAY,CACpDL,IAAMI,UAAUC,MAAML,KAE1BhB,EAAEsB,MACEC,IAAKP,IACLQ,OAAQ,MACRC,MAAO,MACPC,SAAU,OACVC,QAAS,SAAUT,MACfH,QAAUG,MAEdU,MAAO,SAAUV,KAAMW,QACnBC,QAAQF,MAAMvB,IAAM,4CAA8CwB,OAAS,UAAYb,IAAM,QAGrG,OAAOhB,EAAEe,SAASgB,KAAK,WAiB/B,SAASC,YAAYC,SACjB,IAAIC,KAAOD,QAAQhB,KAAK,OACxB,IAAKiB,KAAM,CACPA,KAAOD,QAAQf,KAAK,OAGxB,IAAIiB,KAAO,SAAUC,OACjB,IAAI5B,IAAM0B,KACV,GAAId,kBAAoBA,UAAUC,QAAU,WAAY,CACpDb,IAAMY,UAAUC,MAAMb,KACtB4B,MAAMnB,KAAK,MAAOT,KAEtB,OAAOA,IANA,CAOTyB,SAGF,IAAII,WAAa,SAAUd,KAEvB,GAAI,QAAUtB,OAAOqC,iBAAkB,CACnC,OAAOJ,SACJ,CACH,IAAI1B,IAAMe,IAAIb,MAAM,KAEpB,IAAKF,KAAO,IAAMA,IAAII,OAAQ,CAC1B,OAAOW,QACJ,CACH,OAAOf,IAAI,MAKvB,IAAI+B,KAEJvC,EAAEsB,MACEC,IAAKY,KACLX,OAAQ,MACRC,MAAO,MACPC,SAAU,OACVC,QAAS,SAAUT,MACfqB,KAAOrB,MAEXU,MAAO,SAAUV,KAAMW,QACnBC,QAAQF,MAAMvB,IAAM,4CAA8CwB,OAAS,UAAYM,KAAO,QAGtG,GAAII,KAAM,CAEN,IAAKA,KAAKC,MAAM,iCAAmCD,KAAKC,MAAM,+BAAgC,CAC1FD,KAAOA,KAAO,SAAW,aAAeF,WAAWF,MAIvDnC,EAAEyC,WAAWF,MAGbN,QAAQhB,KAAK,OAAQ,SACrByB,SAASC,KAAKC,YAAYX,QAAQ,IAClCA,QAAQY,WAAW,SAe3B,SAASC,UAAUC,MACf/C,EAAE,gBAAkB+C,KAAO,MACtBC,KAAK,WACFnC,mBAAmBb,EAAEI,MAAM6C,UACtBD,KAAK,WACFhB,YAAYhC,EAAEI,WAelC,SAAS8C,SACL,cAAepD,SAAW,YAAcA,OAAOC,IAGnDG,IAAIiD,SAAWL,UACf5C,IAAIkD,MAAQF,OAEZ,OAAOhD","sourcesContent":["﻿/*!\n * cdp.lazyload.js 2.1.0\n *\n * Date: 2018-03-23T11:30:40.346Z\n */\n((function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD\n        define([\"jquery\"], function ($) {\n            return factory($, root.Config || {}, root.CDP || (root.CDP = {}));\n        });\n    } else {\n        // Browser globals\n        factory(root.jQuery || root.$, root.Config || {}, root.CDP || (root.CDP = {}));\n    }\n})(this, function ($, Config, CDP) {\n\n    var TAG = \"[CDP] \";\n\n    /**\n     * \\~english\n     * Get file extension by file name.\n     *\n     * @private\n     * @param  file {String} [in] file path / file name\n     * @return {String} file extension\n     *\n     * \\~japanese\n     * ファイル名から拡張子を取得\n     *\n     * @private\n     * @param  file {String} [in] file path / file name\n     * @return {String} file extension\n     */\n    function _getExtension(file) {\n        var ret;\n        if (file) {\n            var fileTypes = file.split(\".\");\n            var len = fileTypes.length;\n            if (0 === len) {\n                return ret;\n            }\n            ret = fileTypes[len - 1];\n            return ret;\n        }\n    }\n\n    /**\n     * \\~english\n     * Get script elements.\n     *\n     * @private\n     * @param  file {jQuery} [in] type lazy elements\n     * @return {jQuery} script elements\n     *\n     * \\~japanese\n     * script element の取得\n     *\n     * @private\n     * @param  file {jQuery} [in] type lazy elements\n     * @return {jQuery} script elements\n     */\n    function _getScriptElements($typeLazy) {\n        var scripts;\n        var src = $typeLazy.attr(\"src\");\n        if (!src) {\n            src = $typeLazy.data(\"src\");\n        }\n        if (\"js\" === _getExtension(src).toLowerCase()) {\n            return $typeLazy;\n        } else {\n            if (requirejs && typeof requirejs.toUrl === \"function\") {\n                src = requirejs.toUrl(src);\n            }\n            $.ajax({\n                url: src,\n                method: \"GET\",\n                async: false,\n                dataType: \"html\",\n                success: function (data){\n                    scripts = data;\n                },\n                error: function (data, status) {\n                    console.error(TAG + \"lazyLoad() ajax request failed. [status: \" + status + \"][src: \" + src + \"]\");\n                }\n            });\n            return $(scripts).find(\"script\");\n        }\n    }\n\n    /**\n     * \\~english\n     * Load script and append to head with \"sourceURL\".\n     *\n     * @param $script {JQuery} [in] script's jQuery object\n     *\n     * \\~japanese\n     * \"sourceURL\" コメントと共に、script を同期読み込み\n     * jQuery.append() の Hack。 eval() でスクリプトを有効化している。\n     * Developer Tool の Source Tree 上に表示するため、sourceURL が無ければ埋め込む\n     *\n     * @param $script {JQuery} [in] script の jQuery object\n     */\n    function _appendSync($script) {\n        var _src = $script.attr(\"src\");\n        if (!_src) {\n            _src = $script.data(\"src\");\n        }\n\n        var _url = function ($elem) {\n            var ret = _src;\n            if (requirejs && typeof requirejs.toUrl === \"function\") {\n                ret = requirejs.toUrl(ret);\n                $elem.attr(\"src\", ret);\n            }\n            return ret;\n        }($script);\n\n\n        var toLocation = function (url) {\n            // 明示的に autoDomainAssign = false が指定されているときは、_src を返す\n            if (false === Config.autoDomainAssign) {\n                return _src;\n            } else {\n                var ret = url.split(\"?\");\n\n                if (!ret || 0 === ret.length) {\n                    return url;\n                } else {\n                    return ret[0];\n                }\n            }\n        };\n\n        var code;\n\n        $.ajax({\n            url: _url,\n            method: \"GET\",\n            async: false,\n            dataType: \"text\",\n            success: function (data) {\n                code = data;\n            },\n            error: function (data, status) {\n                console.error(TAG + \"lazyLoad() ajax request failed. [status: \" + status + \"][src: \" + _url + \"]\");\n            }\n        });\n        if (code) {\n            // sourceURL が指定されていなければ追加\n            if (!code.match(/\\/\\/@ sourceURL=[\\s\\S]*?\\n/g) && !code.match(/\\/\\/# sourceURL=[\\s\\S]*?\\n/g)) {\n                code = code + \"\\n//# \" + \"sourceURL=\" + toLocation(_url);\n            }\n\n            // script を有効化\n            $.globalEval(code);\n\n            // <head> に <script> として追加\n            $script.attr(\"type\", \"false\");\n            document.head.appendChild($script[0]);\n            $script.removeAttr(\"type\");\n        }\n    }\n\n    /**\n     * \\~english\n     * Script lazy loading.\n     *\n     * @param type {String} [in] script tag's type\n     *\n     * \\~japanese\n     * 遅延スクリプトロード\n     *\n     * @param type {String} [in] script タグに指定されたタイプを指定\n     */\n    function _lazyLoad(type) {\n        $(\"script[type='\" + type + \"']\")\n            .each(function () {\n                _getScriptElements($(this).remove())\n                    .each(function () {\n                        _appendSync($(this));\n                    });\n            });\n    }\n\n    /**\n     * \\~english\n     * Check for AMD is available.\n     *\n     * \\~japanese\n     * AMD が使用可能か判定\n     *\n     * @private\n     * @return {Boolean} true: AMD 対応環境 / false: AMD 非対応\n     */\n    function _isAMD() {\n        return (typeof define === \"function\" && define.amd);\n    }\n\n    CDP.lazyLoad = _lazyLoad;\n    CDP.isAMD = _isAMD;\n\n    return CDP;\n}));\n"]}